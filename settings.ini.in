[connector-metro]
# Fichier de config distribué par VigiConf
config = @SYSCONFDIR@/vigilo/vigiconf/prod/connector-metro.db

# Le dossier où seront stockés les fichiers RRD
rrd_base_dir = @LOCALSTATEDIR@/lib/vigilo/rrd

# Cette option permet de configurer l'arborescence des dossiers dans lesquels
# seront stockés les RRD. Les valeurs suivantes sont possibles :
# - flat : le dossier au nom de l'hôte sera placé à la racine de rrd_base
# (ci-dessus). Convient pour un faible nombre d'hôtes.
# - name : une arborescence sera créée en utilisant les deux premiers
# caractères du nom de l'hôte. Convient pour des installations de grande
# taille dans lesquelles les hôtes ont des noms dont les deux premiers
# caractères diffèrent.
# - hash : une arborescence sera créé en utilisant les deux premiers caractères
# du hash MD5 du nom de l'hôte. Convient pour des installations de grande
# taille dont les hôtes ont des noms avec un préfixe commun.
# Cette option doit être réglée à l'identique de celle de VigiRRD
rrd_path_mode = hash

# Le chemin vers l'exécutable "rrdtool"
rrd_bin = /usr/bin/rrdtool

# Nombre de processus rrdtool à lancer. Capacité mesurée pour un processus:
# un peu plus de 100 mises à jour par seconde sur une machine moderne (2010).
#rrd_processes = 4

# Utilisation du démon de mise à jour RRDCacheD. Nécessite RRDTool >= 1.4
#rrdcached = @LOCALSTATEDIR@/lib/vigilo/connector-metro/rrdcached.sock

# Vérifier les seuils des indicateurs concernés. À désactiver s'il s'agit d'une
# instance de connector-metro dédiée à la sauvegarde. Par défaut: True
#check_thresholds = True


[bus]
# Nom ou adresse IP du serveur XMPP à utiliser.
host = localhost

# Nom du service de publication pour les messages.
service = pubsub.localhost

# Nom d'utilisateur à utiliser pour se connecter au bus.
jid = connector-metro@localhost

# Mot de passe associé au JID donné.
password = connector-metro

# Priorité statique. Si cette valeur n'est pas renseignée, la priorité est
# automatiquement choisie en fonction du nombre de connecteurs utilisant le
# même compte sur le bus.
#priority = 1

# Si require_* à True, le chiffrement de la connexion sera privilégié.
# Indique s'il faut chiffrer la connexion (True).
require_tls = False

# Indique s'il faut compresser le flux (True)
require_compression = False

# Liste des noms des topics auxquels le connecteur est abonné,
# séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
subscriptions = /vigilo/perf

# Le trafic lié au bus XMPP doit-il être enregistré dans les logs ?
log_traffic = False


[connector]
# Emplacement du fichier de sauvegarde local en cas de pannes.
backup_file = @LOCALSTATEDIR@/lib/vigilo/connector-metro/backup.sqlite

# Nom de la table qui stocke les messages en attente à destination du bus.
backup_table_to_bus = tobus

# Nom de la table qui stocke les messages en attente en provenance du bus.
backup_table_from_bus = frombus

# Nom d'hôte utilisé pour signaler à Vigilo que ce connecteur fonctionne
# correctement. Cela doit correspondre au nom d'hôte configuré dans VigiConf
# pour cette machine. Par défaut, on utilise le nom d'hôte court (sans le
# domaine DNS)
#hostname = hostname

# Le noeud de publication à utiliser pour les messages d'état du connecteur.
# Par défaut, les noeuds définis dans la section [publications] sont utilisés.
#status_node = /vigilo/connectors-status

# La taille maximum de la file d'attente mémoire, à partir de laquelle le
# connecteur indique au bus de ne plus lui envoyer de messages.
# Une limite à 50000 correspond à environ 1Go de RAM utilisé.
# La valeur par défaut est 0, ce qui désactive cette vérification.
#max_queue_size = 0


[publications]
# Noms des messages XML traités avec pour chaque type de message
# le nom du nœud XMPP sur lesquel les messages de ce type sont envoyés.
perf = /vigilo/perf
state = /vigilo/state
event = /vigilo/event
command = /vigilo/command
# Dans le connector-metro, la publication est utilisée pour diffuser les
# métriques de fonctionnement


[loggers]
keys = root,twisted

[handlers]
keys = syslog,console,errors

[formatters]
keys = consoleFormatter,syslogFormatter

[logger_root]
level = INFO
handlers = syslog,console

[logger_twisted]
level = WARNING
qualname = twisted
propagate = 0
handlers = syslog,console

[handler_console]
class = StreamHandler
level = NOTSET
formatter = consoleFormatter
args = (sys.stdout,)

[handler_syslog]
class = handlers.SysLogHandler
level = NOTSET
formatter = syslogFormatter
args = '/dev/log', 'daemon'

[handler_errors]
level = ERROR
class = handlers.RotatingFileHandler
args = ('@LOCALSTATEDIR@/log/vigilo/connector-metro/error.log', 'a', 1024*1024*10, 5)
formatter = consoleFormatter

[formatter_consoleFormatter]
format = [%(created)f] %(levelname)s::%(name)s::%(message)s
datefmt =
class = vigilo.common.logging.VigiloFormatter

[formatter_syslogFormatter]
format = %(processName)s[%(process)d]: %(levelname)s::%(message)s
datefmt =
class = vigilo.common.logging.VigiloFormatter
