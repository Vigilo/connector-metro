[connector-metro]
# Fichier de config distribué par VigiConf
config = @SYSCONFDIR@/vigilo/connector-metro/connector-metro.conf.py

# Le dossier où seront stockés les fichiers RRD
rrd_base_dir = @LOCALSTATEDIR@/lib/vigilo/rrd

# Le chemin vers l'exécutable "rrdtool"
rrd_bin = /usr/bin/rrdtool


[bus]
# Le trafic lié au bus XMPP doit-il être enregistré dans les logs ?
log_traffic = True

# Nom ou adresse IP du serveur XMPP à utiliser.
host = localhost

# Nom du service de publication pour les messages.
service = pubsub.localhost

# Nom d'utilisateur à utiliser pour se connecter au bus.
jid = connector-metro@localhost

# Mot de passe à utiliser
password = connector-metro

# Liste des noms des topics à surveiller, séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
watched_topics = /home/localhost/connector-nagios/perf,

# Liste des noms des topics à créer, séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
# Pas utilisé par le connecteur de metro.
owned_topics = ,



[connector]
# Emplacement du fichier de sauvegarde local en cas de pannes.
backup_file = @LOCALSTATEDIR@/lib/vigilo/connector-metro/backup.sqlite

# Nom de la table qui stocke les messages en attente à destination du bus.
backup_table_to_bus = tobus

# Nom de la table qui stocke les messages en attente en provenance du bus.
backup_table_from_bus = frombus



[loggers]
keys=root,twisted

[handlers]
keys=syslog,console

[formatters]
keys=consoleFormatter,syslogFormatter

[logger_root]
level=INFO
handlers=syslog,console
 
[logger_twisted]
level=INFO
qualname=twisted
propagate=0
handlers=syslog,console

[handler_console]
class=StreamHandler
level=DEBUG
formatter=consoleFormatter
args=(sys.stdout,)

[handler_syslog]
class=handlers.SysLogHandler
level=DEBUG
formatter=syslogFormatter
args='/dev/log', 'daemon'

[formatter_consoleFormatter]
format=[%(created)f] %(levelname)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter

[formatter_syslogFormatter]
format=%(processName)s[%(process)d]: %(levelname)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter
